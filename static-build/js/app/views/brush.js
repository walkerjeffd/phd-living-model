define(["jquery","underscore","backbone","d3","app/charts"],function(e,t,n,r,i){var s=n.View.extend({initialize:function(e){console.log("BrushView: initialize"),this.simModel=e.simModel;var t=this;this.listenTo(this.model,"change:cal_start",this.updatePeriods),this.listenTo(this.model,"change:cal_end",this.updatePeriods),this.listenTo(this.model,"change:por_start",this.updatePeriods),this.listenTo(this.model,"change:por_end",this.updatePeriods),this.listenTo(this.model,"updateInput",this.updatePeriods),this.chart=(new i.BrushChart).id(this.cid).width(650).height(100).x(function(e){return e.Date}).y(function(e){return e.obsQ}).onBrush(t.changeBrush.bind(this))},updatePeriods:function(){var e=r.time.format("%Y-%m-%dT%H:%M:%S"),t=[];this.model.get("cal_start")&&this.model.get("cal_end")&&t.push({key:"calibration",label:"Calibration Period",color:"orangered",extent:[e.parse(this.model.get("cal_start")),e.parse(this.model.get("cal_end"))]});if(this.model.get("por_start")&&this.model.get("por_end")&&this.model.input){var n=e.parse(this.model.get("por_end")),i=this.model.input[this.model.input.length-1].Date;i>n&&t.push({key:"updated",label:"Updated Period since Last Save",color:"steelblue",extent:[n,i]})}t.length>0&&this.chart.periodData(t),this.render()},changeBrush:function(e){e[1]<=e[0]&&(e=null),this.model.trigger("setExtent",e)},render:function(){this.simModel.output&&this.simModel.output.length>0&&r.select(this.$el.children(".chart")[0]).call(this.chart.data(this.simModel.output))}});return s});